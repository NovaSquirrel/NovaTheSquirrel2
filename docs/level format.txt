.---------------------------------------
| Level header
'---------------------------------------

0        1        2        3
DMMMMMMM XXXXXXXX ..YYYYYY LI3v..ss
D = If 1, player starts facing left
M = Background music
X = Starting X position (or Y position, for vertical levels)
Y = Starting Y position (or X position, for vertical levels)
L = Layer 2 level
I = Layer 2 interaction
3 = The second foreground layer is on background layer 3
v = Enable vertical scrolling (or horizontal scrolling, for vertical levels)
s = Level size:
    00: 256x32
    01: 32x256
    10: 256x64
    11: Unused
Room for more flags

4        5
gggrrrrr .bbbbbgg
RGB Level background color

6        7
BBBBBBBB MMMMMMMM
B = Background ID (or 255 for no background)
M = Color math settings
Room for more flags

8        9       
ssssssss SSSSSSSS
s = Low byte of actor list pointer
S = High byte of actor list pointer

10 11 12 13 14 15 16 17
Eight 8-bit actor graphic slot values

18 19 20 21 22 23 24 25
Eight 8-bit background palette values

26+
gggggggg
g = 8-bit graphical asset list, mostly tiles

??
11111111
End of graphic asset list

??
llllllll LLLLLLLL
l = Low byte of level data pointer
L = High byte of level data pointer

.---------------------------------------
| Level data
'---------------------------------------
Level data:
TTTTTTTY XXXXYYYY [SSSSSSSS]
T - Object type (0-111)
Y - Y position absolute (0-31)
X - X position relative (0-15)
S - Settings byte, if needed
    (may be more than one byte)

For a 256x64 level, there aren't enough Y bits here, so the most significant Y bit
sticks around from command to command, and is toggled via a command from the list below

.---------------------------------------
| Level data (commands)
'---------------------------------------
Level commands
1111TTTT [SSSSSSSS]
T - 0 level is over, stop processing
    1 set current X to S
    2 write 1 column byte at current column
    3 write 2 column bytes starting at this column
    4 write a variable amount of column bytes starting at this column
    5 current X -= 16
    6 current X += 16
    7 special command (S selects which one, and additional parameters are taken)
    8 toggle Y coodinate extension
    9-F: Reserved

Special commands:
(Numbers not assigned)
Switch to filling in the alternate level
Layer 3 effects
Per-level assembly routine

.---------------------------------------
| Actor data
'---------------------------------------
XXXXXXXX D.YYYYYY tttttttt abcdTTTT
tT - Actor number (T is higher bits)
D - direction (1 is left)
abcd - misc actor information
X - X position (0-255) (or Y position for vertical levels)
Y - Y position (0-63)  (or X position for vertical levels)
List ends in $ff (so you can't put anything on the rightmost column)

Most significant Y bit could be repurposed for something else on levels that aren't 256x64
